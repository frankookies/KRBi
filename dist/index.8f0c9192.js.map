{"mappings":"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","sources":["src/js/app.js"],"sourcesContent":["/**\n * WEB222 â€“ Assignment 05\n *\n * I declare that this assignment is my own work in accordance with\n * Seneca Academic Policy. No part of this assignment has been\n * copied manually or electronically from any other source\n * (including web sites) or distributed to other students.\n *\n * Please update the following with your information:\n *\n *      Name:       Francesca Ysabelle Galang\n *      Student ID: 101257236\n *      Date:       March 30, 2024\n */\n\n// All of our data is available on the global `window` object.\n// Create local variables to work with it in this file.\nlet { artists, songs } = window;\n\n// For debugging, display all of our data in the console. You can remove this later.\nconsole.log({ artists, songs }, \"App Data\");\n\n//1.Event handler to run when the page is loaded\nwindow.onload = function () {\n  let menu = document.getElementById(\"menu\");\n\n  //Creates all the Artists buttons\n  for (let i = 0; i < artists.length; i++) {\n    let artistButton = document.createElement(\"button\");\n    artistButton.innerHTML = artists[i].name;\n\n    menu.appendChild(artistButton);\n\n    artistButton.addEventListener(\"click\", function () {\n      let title = document.getElementById(\"selected-artist\");\n      title.innerHTML = \"\";\n      artistBio(artists[i]);\n      showSongs(artists[i].artistId);\n    });\n  }\n\n  //display default info - first artist\n  artistBio(artists[0]);\n  showSongs(artists[0].artistId);\n};\n\nfunction artistBio(a) {\n  let title = document.getElementById(\"selected-artist\");\n\n  // Create an <h2> element for the artist's name\n  title.appendChild(document.createTextNode(a.name));\n\n  title.appendChild(document.createTextNode(\" (\"));\n  // Create <a> elements for each URL\n  for (let i = 0; i < a.urls.length; i++) {\n    let link = a.urls[i];\n    let urlLink = document.createElement(\"a\");\n    urlLink.href = link.url;\n    urlLink.target = \"_blank\";\n    urlLink.textContent = link.type;\n    title.appendChild(urlLink);\n    if (i !== a.urls.length - 1) {\n      title.appendChild(document.createTextNode(\", \"));\n    }\n  }\n\n  title.appendChild(document.createTextNode(\")\"));\n}\n\n//Function that shows a list of songs based on the chosen Artist\nfunction showSongs(AID) {\n  let tb = document.getElementById(\"songs\");\n  tb.innerHTML = \"\"; //clears the current tbody\n\n  //filters the song list - songs that are NOT flagged\n  let displaySong = songs.filter((song) => {\n    return song.artistId === AID && song.explicit === false;\n  });\n\n  //Creates a Song Card for each filtered song\n  displaySong.forEach(function (songs) {\n    tb.appendChild(createSongCard(songs));\n  });\n}\n\nfunction createSongCard(song) {\n  // Create a <div> to hold the cards\n  const cardContainer = document.createElement(\"div\");\n  // Add the .card-container class to the <div>\n  cardContainer.classList.add(\"card-container\");\n\n  //Create a <div> for each card\n  const card = document.createElement(\"div\");\n  card.classList.add(\"card\");\n\n  // Create a song image, use the .card-image class\n  const songImg = document.createElement(\"img\");\n  songImg.src = song.imageURL;\n  songImg.classList.add(\"card-image\");\n  card.appendChild(songImg);\n\n  /*   songImg.addEventListener(\"click\", function () {\n    let title = document.getElementById(\"selected-artist\");\n    title.innerHTML = \"\";\n    artistBio(artists[i]);\n    showSongs(artists[i].artistId);\n  }); */\n  //Create title of the song with link to YT video\n  const nameLink = document.createElement(\"a\");\n  nameLink.href = song.url;\n  nameLink.target = \"_blank\"; //open link in a new tab\n  card.appendChild(nameLink);\n\n  nameLink.appendChild(songImg);\n\n  const songName = document.createElement(\"h3\");\n  songName.textContent = song.title;\n  card.appendChild(songName);\n\n  //Create a <div> for the song's info\n  const songInfo = document.createElement(\"div\");\n  songInfo.classList.add(\"song-info\");\n\n  //Create a time element for the song year\n  const year = document.createElement(\"time\");\n  year.appendChild(document.createTextNode(song.year));\n  songInfo.appendChild(year);\n\n  //Formatting the song duration\n  let time = parseInt(song.duration);\n  let min = Math.floor(time / 60);\n  let sec = time % 60;\n  let songDuration = `${min < 10 ? \"0\" : \"\"}${min}:${sec < 10 ? \"0\" : \"\"}${sec}`;\n\n  //Create a span element for the song duration\n  const duration = document.createElement(\"span\");\n  duration.appendChild(document.createTextNode(songDuration));\n  songInfo.appendChild(duration);\n\n  //append the songInfo div to the card div\n  card.appendChild(songInfo);\n  cardContainer.appendChild(card);\n\n  //return the cardContainer div\n  return cardContainer;\n}\n"],"names":[],"version":3,"file":"index.8f0c9192.js.map","sourceRoot":"/__parcel_source_root/"}